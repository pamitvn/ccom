import type { Metadata } from 'next';
import Image from 'next/image';
import Link from 'next/link';
import type { LucideIcon } from 'lucide-react';
import {
  ArrowRight,
  Building2,
  Check,
  HeartPulse,
  Home,
  Leaf,
  Sparkles,
  Sprout,
  Star,
  Timer,
  Shrink,
} from 'lucide-react';
import { getProductConfig, getStoreConfig } from '../lib/config';
import { createPageMetadata } from '../lib/seo';

type PageSearchParams = Record<string, string | string[] | undefined>;

type PageProps = {
  searchParams?: Promise<PageSearchParams>;
};

export async function generateMetadata({ searchParams }: PageProps): Promise<Metadata> {
  const resolvedSearchParams = searchParams ? await searchParams : undefined;
  const store = await getStoreConfig();
  const title = store.tagline;
  const description = 'M√°y x·ª≠ l√Ω r√°c h·ªØu c∆° CS 500W bi·∫øn r√°c nh√† b·∫øp th√†nh ph√¢n h·ªØu c∆° s·∫°ch ch·ªâ trong v√†i gi·ªù.';

  return createPageMetadata({
    title,
    description,
    path: '/',
    keywords: [
      'CCoM',
      'm√°y x·ª≠ l√Ω r√°c h·ªØu c∆°',
      'bi·∫øn r√°c th√†nh ph√¢n',
      'm√°y x·ª≠ l√Ω r√°c nh√† b·∫øp',
      'm√°y ·ªß r√°c h·ªØu c∆°',
    ],
    searchParams: resolvedSearchParams,
  });
}

export default async function HomePage() {
  const store = await getStoreConfig();
  const product = await getProductConfig();

  const heroHighlights =
    store.heroHighlights.length > 0
      ? store.heroHighlights
      : [
          'X·ª≠ l√Ω r√°c trong 2‚Äì3 gi·ªù th√†nh m√πn h·ªØu c∆° kh√¥.',
          'Gi·∫£m 80‚Äì90% th·ªÉ t√≠ch r√°c, gi·ªØ b·∫øp s·∫°ch th∆°m.',
          'Kh·ª≠ m√πi than ho·∫°t t√≠nh, kh√¥ng c√≤n ru·ªìi mu·ªói.',
        ];

  const whyItems: { icon: LucideIcon; title: string; description: string }[] = [
    {
      icon: Timer,
      title: 'X·ª≠ l√Ω r√°c trong 2‚Äì3 gi·ªù',
      description:
        'Rau, v·ªè tr√°i c√¢y, th·ª©c ƒÉn th·ª´a, b√£ c√† ph√™, v·ªè tr·ª©ng‚Ä¶ ƒë∆∞·ª£c nghi·ªÅn nh·ªè, s·∫•y kh√¥ v√† kh·ª≠ m√πi tri·ªát ƒë·ªÉ.',
    },
    {
      icon: Shrink,
      title: 'Gi·∫£m 80‚Äì90% th·ªÉ t√≠ch r√°c',
      description: 'Kh√¥ng c√≤n c·∫£nh r√°c tr√†n th√πng hay m√πi h√¥i kh√≥ ch·ªãu trong cƒÉn b·∫øp.',
    },
    {
      icon: Sparkles,
      title: 'Kh·ª≠ m√πi ho√†n to√†n',
      description: 'C√¥ng ngh·ªá l·ªçc than ho·∫°t t√≠nh, kh√¥ng ru·ªìi mu·ªói, kh√¥ng √°m m√πi.',
    },
    {
      icon: Leaf,
      title: 'T·∫°o ph√¢n h·ªØu c∆° dinh d∆∞·ª°ng',
      description: 'Th√†nh ph·∫©m l√† m√πn h·ªØu c∆° gi√†u d∆∞·ª°ng ch·∫•t, b√≥n tr·ª±c ti·∫øp cho c√¢y tr·ªìng.',
    },
    {
      icon: Home,
      title: 'Ti·ªán l·ª£i ‚Äì Sang tr·ªçng ‚Äì Hi·ªán ƒë·∫°i',
      description: 'Thi·∫øt k·∫ø nh·ªè g·ªçn, ƒë·∫πp m·∫Øt, n√¢ng t·∫ßm m·ªçi cƒÉn b·∫øp gia ƒë√¨nh.',
    },
  ];

  const audienceItems: { icon: LucideIcon; title: string; description: string }[] = [
    {
      icon: Building2,
      title: 'Gia ƒë√¨nh ·ªü chung c∆∞, nh√† ph·ªë',
      description: 'Gi·∫£i ph√°p g·ªçn nh·∫π khi kh√¥ng c√≥ nhi·ªÅu kh√¥ng gian ch·ª©a r√°c.',
    },
    {
      icon: Sprout,
      title: 'Ng∆∞·ªùi y√™u l√†m v∆∞·ªùn, tr·ªìng c√¢y',
      description: 'Ch·ªß ƒë·ªông ngu·ªìn ph√¢n h·ªØu c∆° s·∫°ch, gi√†u dinh d∆∞·ª°ng m·ªói ng√†y.',
    },
    {
      icon: HeartPulse,
      title: 'Gia ƒë√¨nh ch√∫ tr·ªçng s·ª©c kh·ªèe & m√¥i tr∆∞·ªùng',
      description: 'Gi·ªØ cƒÉn b·∫øp s·∫°ch ƒë·∫πp, an to√†n cho c·∫£ nh√†, s·ªëng xanh h∆°n t·ª´ng ng√†y.',
    },
  ];

  const realBenefits = [
    'B·∫£o v·ªá s·ª©c kh·ªèe: kh√¥ng c√≤n vi khu·∫©n, ru·ªìi mu·ªói t·ª´ r√°c.',
    'Ti·∫øt ki·ªám chi ph√≠: c√≥ ph√¢n h·ªØu c∆° mi·ªÖn ph√≠ cho c√¢y tr·ªìng.',
    'B·∫£o v·ªá m√¥i tr∆∞·ªùng: gi·∫£m l∆∞·ª£ng r√°c ch√¥n l·∫•p v√† kh√≠ nh√† k√≠nh.',
  ];

  return (
    <div className="bg-white">
      <section id="hero" className="bg-gradient-to-br from-green-50 to-blue-50 py-20">
        <div className="container mx-auto grid items-center gap-12 px-4 lg:grid-cols-2">
          <div className="space-y-8">
            <span className="inline-flex items-center rounded-full bg-green-100 px-4 py-1 text-sm font-medium text-green-700">
              M√°y t√°i ch·∫ø r√°c h·ªØu c∆° gia ƒë√¨nh
            </span>
            <div className="space-y-4">
              <h1 className="text-5xl font-bold leading-tight text-gray-900 lg:text-6xl">
                {store.tagline}
                <span className="ml-2 text-green-600" role="img" aria-label="Sprout">
                  üå±
                </span>
              </h1>
              <p className="text-xl text-gray-600">
                Bi·∫øn r√°c th√†nh ph√¢n ‚Äì Gi·ªØ b·∫øp s·∫°ch th∆°m ‚Äì B·∫£o v·ªá m√¥i tr∆∞·ªùng.
              </p>
            </div>

            <ul className="space-y-3 text-gray-700">
              {heroHighlights.map((item) => (
                <li key={item} className="flex items-start space-x-3">
                  <Check className="mt-1 h-5 w-5 flex-shrink-0 text-green-600" />
                  <span>{item}</span>
                </li>
              ))}
            </ul>

            <div className="flex flex-col gap-4 sm:flex-row">
              <Link
                href="/product"
                className="flex items-center justify-center space-x-2 rounded-xl bg-green-600 px-8 py-4 text-lg font-semibold text-white transition-all hover:scale-105 hover:bg-green-700"
              >
                <span>Xem s·∫£n ph·∫©m</span>
                <ArrowRight className="h-5 w-5" />
              </Link>
              <Link
                href="/#benefits"
                className="rounded-xl border border-green-600 px-8 py-4 text-center text-lg font-semibold text-green-600 transition-all hover:bg-green-50"
              >
                T√¨m hi·ªÉu th√™m
              </Link>
            </div>

            <div className="flex items-center space-x-4 text-sm text-gray-600">
              <div className="flex space-x-1">
                {[...Array(5)].map((_, index) => (
                  <Star key={index} className="h-4 w-4 fill-yellow-400 text-yellow-400" />
                ))}
              </div>
              <span>ƒê√°nh gi√° 4.9/5 t·ª´ h∆°n 1,000 kh√°ch h√†ng</span>
            </div>
          </div>

          <div className="relative">
            <div className="rounded-3xl bg-white p-8 shadow-2xl">
              <Image
                src="/product-black.jpg"
                alt="M√°y x·ª≠ l√Ω r√°c th·∫£i CCoM"
                width={720}
                height={720}
                priority
                sizes="(min-width: 1024px) 50vw, 90vw"
                className="h-auto w-full"
              />
            </div>
            <div className="absolute -right-4 -top-4 rounded-full bg-green-600 px-4 py-2 font-semibold text-white">
              Bi·∫øn r√°c th√†nh ph√¢n!
            </div>
          </div>
        </div>
      </section>

      <section id="why" className="py-16">
        <div className="container mx-auto px-4">
          <div className="mx-auto max-w-3xl text-center">
            <h2 className="text-4xl font-bold text-gray-900">T·∫°i sao b·∫°n n√™n c√≥ m√°y n√†y trong b·∫øp?</h2>
            <p className="mt-4 text-lg text-gray-600">
              CS 500W x·ª≠ l√Ω tr·ªçn v·∫πn r√°c h·ªØu c∆° m·ªói ng√†y, gi·ªØ cƒÉn b·∫øp s·∫°ch s·∫Ω v√† mang l·∫°i ngu·ªìn ph√¢n h·ªØu c∆° d·ªìi d√†o.
            </p>
          </div>

          <div className="mt-12 grid gap-8 md:grid-cols-2 xl:grid-cols-3">
            {whyItems.map((item) => (
              <div key={item.title} className="rounded-3xl bg-white p-6 shadow-lg">
                <div className="mb-4 flex h-12 w-12 items-center justify-center rounded-full bg-green-100 text-green-600">
                  <item.icon className="h-6 w-6" />
                </div>
                <h3 className="mb-2 text-xl font-semibold text-gray-900">{item.title}</h3>
                <p className="text-gray-600">{item.description}</p>
              </div>
            ))}
          </div>
        </div>
      </section>

      <section id="benefits" className="bg-gray-50 py-20">
        <div className="container mx-auto px-4">
          <div className="mb-12 max-w-3xl text-center md:mx-auto">
            <h2 className="text-4xl font-bold text-gray-900">T√≠nh nƒÉng n·ªïi b·∫≠t</h2>
            <p className="mt-4 text-lg text-gray-600">
              3 trong 1: S·∫•y nhi·ªát, nghi·ªÅn nh·ªè v√† kh·ª≠ m√πi than ho·∫°t t√≠nh ‚Äì r√°c bi·∫øn th√†nh m√πn h·ªØu c∆° s·∫°ch, kh√¥ r√°o.
            </p>
          </div>

          <div className="grid gap-8 md:grid-cols-2 xl:grid-cols-4">
            {product.features.map((feature) => (
              <div key={feature.title} className="rounded-3xl bg-white p-6 shadow-sm">
                <div className="mb-4 text-3xl">{feature.icon}</div>
                <h3 className="mb-2 text-lg font-semibold text-gray-900">{feature.title}</h3>
                <p className="text-gray-600">{feature.description}</p>
              </div>
            ))}
          </div>
        </div>
      </section>

      <section id="audience" className="bg-gray-50 py-20">
        <div className="container mx-auto px-4">
          <div className="mx-auto max-w-3xl text-center">
            <h2 className="text-4xl font-bold text-gray-900">Ph√π h·ª£p v·ªõi ai?</h2>
            <p className="mt-4 text-lg text-gray-600">
              D√†nh cho nh·ªØng gia ƒë√¨nh y√™u th√≠ch s·ª± g·ªçn g√†ng, s·∫°ch s·∫Ω v√† ∆∞u ti√™n l·ªëi s·ªëng xanh.
            </p>
          </div>

          <div className="mt-12 grid gap-8 md:grid-cols-3">
            {audienceItems.map((item) => (
              <div key={item.title} className="rounded-3xl bg-white p-6 text-center shadow-lg">
                <div className="mx-auto mb-4 flex h-14 w-14 items-center justify-center rounded-full bg-green-100 text-green-600">
                  <item.icon className="h-7 w-7" />
                </div>
                <h3 className="mb-2 text-lg font-semibold text-gray-900">{item.title}</h3>
                <p className="text-gray-600">{item.description}</p>
              </div>
            ))}
          </div>
        </div>
      </section>

      <section id="real-benefits" className="py-20">
        <div className="container mx-auto px-4">
          <div className="mx-auto max-w-3xl text-center">
            <h2 className="text-4xl font-bold text-gray-900">L·ª£i √≠ch th·ª±c t·∫ø</h2>
            <p className="mt-4 text-lg text-gray-600">
              S·ªëng ti·ªán nghi h∆°n v√† g√≥p ph·∫ßn b·∫£o v·ªá m√¥i tr∆∞·ªùng ngay trong cƒÉn b·∫øp c·ªßa b·∫°n.
            </p>
          </div>

          <ul className="mt-12 grid gap-6 md:grid-cols-3">
            {realBenefits.map((benefit) => (
              <li key={benefit} className="rounded-3xl border border-green-100 p-6 text-left shadow-sm">
                <div className="mb-3 flex h-10 w-10 items-center justify-center rounded-full bg-green-600 text-white">
                  <Check className="h-5 w-5" />
                </div>
                <p className="text-gray-700">{benefit}</p>
              </li>
            ))}
          </ul>
        </div>
      </section>

      <section id="cta" className="bg-gradient-to-r from-green-600 to-emerald-600 py-20">
        <div className="container mx-auto flex flex-col items-center gap-6 px-4 text-center text-white">
          <h2 className="text-4xl font-bold">S·∫µn s√†ng n√¢ng c·∫•p cƒÉn b·∫øp s·ªëng xanh?</h2>
          <p className="max-w-2xl text-lg text-green-100">
            ƒê·∫∑t mua {store.name} CS 500W ngay h√¥m nay ƒë·ªÉ bi·∫øn r√°c nh√† b·∫øp th√†nh ph√¢n h·ªØu c∆° s·∫°ch, b·∫£o v·ªá s·ª©c kh·ªèe c·∫£ gia ƒë√¨nh v√† m√¥i tr∆∞·ªùng.
          </p>
          <Link
            href="/product"
            className="rounded-xl bg-white px-8 py-4 text-lg font-semibold text-green-700 transition-all hover:scale-105"
          >
            T√¨m hi·ªÉu s·∫£n ph·∫©m
          </Link>
        </div>
      </section>
    </div>
  );
}
